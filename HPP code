import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error
data = pd.read_csv("C:\\Users\\Lenevo\\Downloads\\Delhi house prediction.csv")
data.head()
data.tail()
data.shape
data.columns
data.isnull().sum()
from sklearn.preprocessing import LabelEncoder, StandardScaler, FunctionTransformer
from sklearn.impute import SimpleImputer
from sklearn.compose import ColumnTransformer 
from sklearn.pipeline import Pipeline
imputer = SimpleImputer(strategy = 'most_frequent')
data[['Bathroom','Furnishing','Parking','Type']]=imputer.fit_transform(data[['Bathroom','Furnishing','Parking','Type']])
print(data[['Bathroom','Furnishing','Parking','Type']])
data.isnull().sum()
data.describe()
correlation =data.corr()
correlation
plt.figure(figsize=(10,10))
sns.heatmap(correlation,cbar = True, square = True, fmt='.1f',annot=True,cmap='Reds')
X= data[['Area','BHK']]
y=data['Price']
print(X)
print(y)
X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.2,random_state=42)
print(X.shape,X_train.shape,X_test.shape)
model= LinearRegression()
model.fit(X_train, y_train)
y_pred = model.predict(X_test)
y_pred
mse =mean_squared_error(y_test,y_pred)
print("Mean Squared Error:",mse)
rmse = mse**0.5
print("Root Mean Squared Error: ",rmse)
r_squared = model.score(X_test,y_test)
print("R-squared:",r_squared)
new_house =pd.DataFrame({'Area':[1000],'BHK':[3]})
predicted_price=model.predict(new_house)
print("Predicted price for the new house:",predicted_price)
plt.scatter(y_test,y_pred)
plt.xlabel("Actual Price")
plt.ylabel("Predicted Price")
plt.title("House Price Prediction")
plt.show()
